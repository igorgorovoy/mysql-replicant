- hosts: slave-new
  user: vagrant
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - ./vars/external_vars.yml
  tasks:

  - name: Install MySQL Server
    apt: name=mysql-server state=latest update_cache=yes

  - name: Install pip3
    apt: name=python3-pip state=latest update_cache=yes

  - name: Install python3-mysqldb
    apt: name=python3-mysqldb state=latest update_cache=yes

  - name: Make sure pymysql is present
    pip:
      name: pymysql
      state: present

  - name: Modify configuration file to listen on all interfaces
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^bind-address" line="bind-address=0.0.0.0"


- hosts: slave-new
  user: vagrant
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - ./vars/external_vars.yml
  tasks:
  - name: Modify configuration file to setup server ID
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^#server-id" line="server-id=2"

  - name: Define bin log db and path
    blockinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      block: |
        log_bin = /var/log/mysql/mysql-bin.log
        binlog_do_db = "{{ repl_db }}"
        relay-log = /var/log/mysql/mysql-relay-bin.log

#  - name: Restart mysql service
#    service: name=mysql state=restarted

  - name: Stop MySQL on slave
    service:
      name: mysql
      state: stopped

  - name: Delete slave data
    file:
      path: /var/lib/mysql
      state: absent

  - name: Create /var/lib/mysql
    file:
      path: /var/lib/mysql
      state: directory
      owner: mysql
      group: mysql
      mode: 0750

  - name: create temporary directory on localhost
    delegate_to: localhost
    tempfile:
      state: directory
      prefix: ansible-
      suffix: .mysqlslave
    register: local_tmp

  - name: Download database dump from ansible host to slave
    copy:
      src: "/tmp/dump.tar.gz"
      dest: "/tmp/"

  - name: Uncompress database dump
    unarchive:
      src: "/tmp/dump.tar.gz"
      dest: /var/lib/mysql
      owner: mysql
      group: mysql

  - name: Start MySQL on slave
    service:
      name: mysql
      state: started

  - name: Get binlog file
    command: >-
      sed -r 's/^(.*)\s[0-9]+$/\1/'
      /var/lib/mysql/xtrabackup_binlog_info
    args:
        warn: false
    register: binlog_file

  - name: Get binlog position
    command: >-
      sed -r 's/^.*\s([0-9]+)$/\1/'
      /var/lib/mysql/xtrabackup_binlog_info
    args:
      warn: false
    register: binlog_position

  - name: Configure MySQL slave process
    mysql_replication:
      master_host: "{{ master_host }}"
      master_user: "{{ replication_user }}"
      master_password: "{{ replication_password }}"
      master_log_file: "{{ binlog_file.stdout }}"
      master_log_pos: "{{ binlog_position.stdout }}"
      #master_ssl: 1
      #master_ssl_capath: /etc/ssl/certs
      mode: changemaster

  - name: Start MySQL slave process
    mysql_replication:
      mode: startslave

#    - name: remove database dump from localhost
#      delegate_to: localhost
#      file:
#        path: "{{ hostvars[master].local_tmp.path }}"
#        state: absent

    
#  - name: Restart mysql service
#    service: name=mysql state=restarted


  - name: Get master binlog file name and binlog position
    mysql_replication:
      mode: getmaster
      master_user: "{{ replication_user }}"
      master_password: "{{ replication_password }}"
      master_host: "{{ master_host }}"
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Check slave status
    mysql_replication:
      mode: getslave
      login_unix_socket: /var/run/mysqld/mysqld.sock
