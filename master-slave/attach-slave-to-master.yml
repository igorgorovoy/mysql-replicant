- hosts: master:slave-new
  user: vagrant
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - ./vars/external_vars.yml
  tasks:
  - name: Debug
    debug: msg={{ replication_password }}

  - name: Install MySQL Server
    apt: name=mysql-server state=latest update_cache=yes

  - name: Install pip3
    apt: name=python3-pip state=latest update_cache=yes

  - name: Install python3-mysqldb
    apt: name=python3-mysqldb state=latest update_cache=yes

  - name: Make sure pymysql is present
    pip:
      name: pymysql
      state: present

  - name: Set root user password
    mysql_user:
      name: root
      host: "%"
      password: "{{ root_password }}"
      check_implicit_admin: yes
      state: present
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Create replication account
    mysql_user: 
      name: "{{ replication_user }}"
      host: "%" 
      password: "{{ replication_password }}"
      priv: "*.*:REPLICATION SLAVE" 
      state: present 
      login_unix_socket: /var/run/mysqld/mysqld.sock 

  - name: Create readwrite user
    mysql_user: 
      name: "{{ rw_user }}"
      host: "%" 
      password: "{{ rw_user_password }}"
      priv: "*.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP" 
      state: present 
      login_unix_socket: /var/run/mysqld/mysqld.sock 

  - name: Modify configuration file to listen on all interfaces
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^bind-address" line="bind-address=0.0.0.0"

#- hosts: master
#  user: vagrant
#  vars:
#    ansible_python_interpreter: /usr/bin/python3
#  vars_files:
#    - ./vars/external_vars.yml
#  tasks:
#  - name: Modify configuration file to setup server ID
#    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^#server-id" line="server-id=1"

#  - name: Define bin log db and path 
#    blockinfile:
#      path: /etc/mysql/mysql.conf.d/mysqld.cnf
#      block: |
#        log_bin = /var/log/mysql/mysql-bin.log
#        binlog_do_db = {{ repl_db }}

#  - name: Restart mysql service
#    service: name=mysql state=restarted

#  - name: Reset master binlog
#    command: /usr/bin/mysql -u root -e "RESET MASTER"

- hosts: slave-new
  user: vagrant
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - ./vars/external_vars.yml
  tasks:
  - name: Modify configuration file to setup server ID
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^#server-id" line="server-id=2"
  - name: Define bin log db and path
    blockinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      block: |
        log_bin = /var/log/mysql/mysql-bin.log
        binlog_do_db = "{{ repl_db }}"
        relay-log = /var/log/mysql/mysql-relay-bin.log

  - name: Restart mysql service
    service: name=mysql state=restarted
  
  - name: Get master binlog file name and binlog position
    mysql_replication:
      mode: getmaster
      master_user: "{{ replication_user }}"
      master_password: "{{ replication_password }}"
      master_host: "{{ master_host }}"
      login_unix_socket: /var/run/mysqld/mysqld.sock
    
#  - name: Setup replication
#    mysql_replication:
#      mode: changemaster
#      master_user: "{{ replication_user }}"
#      master_password: "{{ replication_password }}"
#      master_host: "{{ master_host }}"
##      master_log_file: mysql-bin.000009
##      master_log_pos: current_pos
#      login_unix_socket: /var/run/mysqld/mysqld.sock

#  - name: Restart mysql service
#    service: name=mysql state=restarted

  - name: Check slave status
    mysql_replication:
      mode: getslave
      login_unix_socket: /var/run/mysqld/mysqld.sock
