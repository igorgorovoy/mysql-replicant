- hosts: master:slave
  user: vagrant
  become: true
  tasks:
  - name: Install MySQL Server
    apt: name=mysql-server state=latest update_cache=yes

  - name: Install pip3
    apt: name=python3-pip state=latest update_cache=yes

  - name: Make sure pymysql is present
    become: true # needed if the other tasks are not played as root
    pip:
      name: pymysql
      state: present

  - name: Set root user password
    mysql_user:
      name: root
      host: "%"
      password: abc123
      check_implicit_admin: yes
      state: present
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Create replication account
    mysql_user: 
      name: repl 
      host: "%" 
      password: s3cr3tPaSSwordR 
      priv: "*.*:REPLICATION SLAVE" 
      state: present 
      login_unix_socket: /var/run/mysqld/mysqld.sock 

  - name: Create readwrite user
    mysql_user: 
      name: rwuser 
      host: "%" 
      password: s3cr3tPaSSwordR 
      priv: "*.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP" 
      state: present 
      login_unix_socket: /var/run/mysqld/mysqld.sock 

  - name: Modify configuration file to listen on all interfaces
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^bind-address" line="bind-address=0.0.0.0"

- hosts: master
  user: vagrant
  tasks:
  - name: Modify configuration file to setup server ID
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^#server-id" line="server-id=1"
  - name: Define bin log db and path 
    blockinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      block: |
        log_bin = /var/log/mysql/mysql-bin.log
        binlog_do_db = newdatabase

  - name: Restart mysql service
    service: name=mysql state=restarted
  - name: Reset master binlog
    command: /usr/bin/mysql -u root -e "RESET MASTER"

- hosts: slave
  user: vagrant
  become: true
  tasks:
  - name: Modify configuration file to setup server ID
    lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^#server-id" line="server-id=2"
  - name: Define bin log db and path
    blockinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      block: |
        log_bin = /var/log/mysql/mysql-bin.log
        binlog_do_db = newdatabase
        relay-log = /var/log/mysql/mysql-relay-bin.log

  - name: Restart mysql service
    service: name=mysql state=restarted
  
#  - name: Setup replication
#    command: /usr/bin/mysql -uroot -e "CHANGE MASTER TO master_host='192.168.10.2', master_user='repl', master_password='s3cr3tPaSSwordR', master_use_gtid=current_pos"

#  - name: Setup replication
#    mysql_replication:
#      mode: changemaster
#      master_user: repl
#      master_password: s3cr3tPaSSwordR
#      master_host: 192.168.10.2
##      master_log_file: mysql-bin.000009
##      master_log_pos: current_pos
#      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Restart mysql service
    service: name=mysql state=restarted

  - name: Get master binlog file name and binlog position
    mysql_replication:
      mode: getmaster
      master_user: repl
      master_password: s3cr3tPaSSwordR
      master_host: 192.168.10.2
##      master_log_file: mysql-bin.000009
##      master_log_pos: current_pos
      login_unix_socket: /var/run/mysqld/mysqld.sock


#  - name: "Ansible | List all known variables and facts"
#    debug:
#      var: hostvars[inventory_hostname]

#  - name: Check master_log_file master_log_pos
#    debug:
#      msg: |
#        The master_log_file  is {{ master_log_file }}
#        The master_log_pos is {{ master_log_pos }}

  - name: Check slave status
    mysql_replication:
      mode: getslave
      login_unix_socket: /var/run/mysqld/mysqld.sock
